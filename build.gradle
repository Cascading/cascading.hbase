/*
 * Copyright (c) 2007-2014 Concurrent, Inc. All Rights Reserved.
 *
 * Project and contact information: http://www.cascading.org/
 *
 * This file is part of the Cascading project.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import java.text.SimpleDateFormat

ext.cascadingVersion = '2.6.0'

apply from: "etc/properties.gradle"
apply from: "etc/version.gradle"

def versionProperties = new Properties()
file( 'version.properties' ).withInputStream { versionProperties.load( it ) }

group = 'cascading'

ext.timestamp = new SimpleDateFormat( "yyyyMMdd" ).format( new Date() )

buildscript {
  repositories {
    mavenCentral()
    maven { url 'http://repo.springsource.org/plugins-release' }
  }

  dependencies {
    classpath 'eu.appsatori:gradle-fatjar-plugin:0.2'
    classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.5'
  }
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  apply plugin: 'fatjar'
  apply plugin: 'propdeps'
  apply plugin: 'propdeps-idea'
  apply plugin: 'propdeps-eclipse'
  apply plugin: 'propdeps-maven'

  repositories {
    mavenLocal()
    mavenCentral()
    maven{ url 'http://conjars.org/repo/' }
    maven{ url 'https://repository.apache.org/content/repositories/releases/' }
  }
  version = releaseVersion
}

subprojects{
  configurations {
    testArtifacts {
      extendsFrom testRuntime
    }
  }

  task sourcesJar( type: Jar, dependsOn: classes ) {
    from sourceSets.main.allSource
    classifier = 'sources'
  }

  task javadocJar( type: Jar, dependsOn: javadoc ) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  task testsJar( type: Jar, dependsOn: testClasses ) {
    from sourceSets.test.output
    classifier = 'tests'
  }

  task testSourcesJar( type: Jar, dependsOn: classes ) {
    from sourceSets.test.allSource
    classifier = 'test-sources'
  }

  fatJar {
    classifier = 'provider'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/LICENSE*'
  }

  artifacts {
    archives jar
    archives fatJar
    archives sourcesJar
    archives javadocJar
    archives testsJar
    archives testSourcesJar
    testArtifacts testsJar
    testArtifacts testSourcesJar
  }

  jar {
    manifest {
      attributes( "Build-Date": "${timestamp}" )
    }
  }

  task createFrameworkProperties( dependsOn: processResources ) << {
    file( "${sourceSets.main.output.resourcesDir}/cascading" ).mkdirs()
    file( "${sourceSets.main.output.resourcesDir}/cascading/framework.properties").write("name=${project.name}:${version}\n" )
  }

  jar.dependsOn( createFrameworkProperties )
  fatJar.dependsOn( createFrameworkProperties )


  test {
    jvmArgs '-Xmx756m'

    enableAssertions = false

    include '**/*Test.class'
  }

  uploadArchives {

    repositories.mavenDeployer {
      configuration = configurations.archives

      repository( url: repoUrl ) {
        authentication( userName: repoUserName, password: repoPassword )
      }

      pom.project {
        description 'Cascading HBase is a simple adapter for HBase.'
        inceptionYear '2012'
        url 'http://cascading.org/'
        scm {
          url 'https://github.com/Cascading/cascading.hbase.git'
        }
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }
      }
    }
  }
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

eclipse {
  classpath {
    defaultOutputDir = file( 'build' )
    downloadSources = true
    downloadJavadoc = true
  }
}
